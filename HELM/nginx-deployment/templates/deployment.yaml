apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.metadataname }}
  namespace: {{ .Values.namespace }}
  labels:
    app:  {{ .Values.appname }}
spec:
  replicas: {{ .Values.replicas}}
  selector:
    matchLabels:
      app: {{ .Values.appname }}
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1    
  template:
    metadata:
      labels:
        app: {{ .Values.appname }}
    spec:
      containers:
      - name: nginx
        image: nginx
        ports:
        - containerPort: {{ .Values.cport }}
        volumeMounts:
          - name: load_config
          mountPath: "/load_config"
          readOnly: true
        env:
        - name: JVM
          value: "11"
        - name: PLAYER_INITIAL_LIVES
          valueFrom:
            configMapKeyRef:
              name: {{ .Values.appname }}-game-demo
              key: player_initial_lives
        - name: MACHINE
          value: "18"
        - name: SERVER
          value: "cf111"
        - name: ENVIRONMENT
          value: {{ .Values.environment}}
        - name: Release
          value: {{ .Release.Name }}
        {{- if .Values.env_variables.enabled }}
        - name: Consul
          value: "True"
        {{- else }}  
        - name: Consul
          value: "False"
        {{- end }}  
      volumes:
        # You set volumes at the Pod level, then mount them into containers inside that Pod
      - name: load_config
        configMap:
          # Provide the name of the ConfigMap you want to mount.
          name: {{ .Values.appname }}-game-demo
          # An array of keys from the ConfigMap to create as files
          items:
          - key: "player_initial_lives"
            path: "player_initial_lives"   
           
        
